services:
  postgresql:
    image: postgres:13
    container_name: postgres_container
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  springboot:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: springboot_container
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "8080:8080"
    depends_on:
      - postgresql
    networks:
      - app-network
    volumes:
      - images_data:/home/ubuntu/kakao_mlms_main/images/

  react:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react_container
    ports:
      - "3000:80"
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - springboot
    networks:
      - app-network
  
  elasticsearch:
    container_name: elasticsearch_container
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: ${ELK_VERSION}
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: mlms123
      discovery.type: single-node
    networks:
      - app-network
  
  kibana:
    container_name: kibana_container
    build:
      context: kibana/
      args:
        ELK_VERSION: ${ELK_VERSION}
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - app-network
    depends_on:
      - elasticsearch

volumes:
  postgres_data:
  images_data:
  elasticsearch:

networks:
  app-network:
    driver: bridge
